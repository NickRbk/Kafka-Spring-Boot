version: '3'
services:

  zookeeper:
    image: zookeeper
    container_name: zookeeper
    ports:
      - '2181:2181'
    # restart: on-failure

  kafka:
    image: wurstmeister/kafka:2.11-2.0.0
    container_name: kafka
    links:
      - zookeeper
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS=onlineStream
    # restart: on-failure

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - '6379:6379'
    
  postgres:
    build: ./postgres
    container_name: postgres
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=nick
    ports:
      - '5432:5432'
    restart: on-failure
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - '80:80'
    # restart: on-failure

  producer:
    build:
      context: ./microservice/producer
      dockerfile: Dockerfile
    container_name: producer
    links:
      - postgres
      - redis
      - kafka
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPIC=onlineStream
      - RSS_CRON_UPDATER=* 1/5 * * * *
      - PGHOST=postgres
      - PGPORT=5432
      - PGDATABASE=resourcedb
      - PGUSER=nick
      - PGPASSWORD=password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - C:/Users/nryba/.m2/repository:/root/.m2/repository
      - ./microservice/producer:/app
    # restart: on-failure
  
  writer:
    build:
      context: ./microservice/writer
      dockerfile: Dockerfile
    container_name: writer
    links:
      - postgres
      - kafka
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - PGHOST=postgres
      - PGPORT=5432
      - PGDATABASE=rss_itemdb
      - PGUSER=nick
      - PGPASSWORD=password
    volumes:
      - C:/Users/nryba/.m2/repository:/root/.m2/repository
      - ./microservice/writer:/app
    # restart: on-failure

  listener:
    build:
      context: ./microservice/listener
      dockerfile: Dockerfile
    container_name: listener
    links:
      - postgres
      - kafka
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - PGHOST=postgres
      - PGPORT=5432
      - PGDATABASE=rss_itemdb
      - PGUSER=nick
      - PGPASSWORD=password
    volumes:
      - C:/Users/nryba/.m2/repository:/root/.m2/repository
      - ./microservice/listener:/app
    ports:
      - '8081:8080'
    # restart: on-failure
  
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: client
    volumes:
      - ./client:/app
    ports:
      - '4200:4200'
    # restart: on-failure